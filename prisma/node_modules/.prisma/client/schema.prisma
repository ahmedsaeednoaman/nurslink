// prisma/schema.prisma

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "./node_modules/.prisma/client"
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  password  String
  jobs      Job[]
  coupons   Coupon[]
  orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Job {
  id          String   @id @default(uuid())
  title       String
  description String
  salary      Float
  location    String
  type        String
  specialty   String
  employer    User     @relation(fields: [employerId], references: [id])
  employerId  String
  createdAt   DateTime @default(now())
}

model Order {
  id        String      @id @default(uuid())
  fullName  String
  phone     String
  address   String
  notes     String?
  status    String      @default("PENDING")
  total     Float
  user      User?       @relation(fields: [userId], references: [id])
  userId    String?
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  items     OrderItem[]
}

model OrderItem {
  id        String  @id @default(uuid())
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   String
  product   Product @relation(fields: [productId], references: [id])
  productId String
  name      String
  price     Float
  quantity  Int
}

model Product {
  id     String      @id @default(uuid())
  name   String
  price  Float
  image  String
  stock  Int         @default(0)
  orders OrderItem[]
}

model Coupon {
  id          String     @id @default(uuid())
  code        String     @unique
  type        CouponType
  value       Float
  description String?
  isActive    Boolean    @default(true)
  expiryDate  DateTime?
  user        User?      @relation(fields: [userId], references: [id])
  userId      String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  @@map("coupons")
}

enum CouponType {
  PERCENTAGE
  FIXED
}
